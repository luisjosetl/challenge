// <auto-generated />
using System;
using AutorizacionDePagos.Api.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutorizacionDePagos.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240213092611_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AutorizacionDePagos.Api.Domain.Autorizacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoOperacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<Guid>("EstadoAutorizacionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Monto")
                        .HasColumnType("int");

                    b.Property<decimal?>("MontoDenegado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TipoAutorizacionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EstadoAutorizacionId");

                    b.HasIndex("TipoAutorizacionId");

                    b.ToTable("Autorizaciones", (string)null);
                });

            modelBuilder.Entity("AutorizacionDePagos.Api.Domain.AutorizacionAprobada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoOperacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Monto")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TipoAutorizacionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AutorizacionesAprobadas", (string)null);
                });

            modelBuilder.Entity("AutorizacionDePagos.Api.Domain.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("094532e6-be77-4d5a-93c8-3d54131d4337"),
                            Eliminado = false,
                            FechaCreacion = new DateTime(2024, 2, 13, 6, 26, 11, 625, DateTimeKind.Local).AddTicks(2154),
                            Nombre = "Jose",
                            TipoCliente = "PRIMERO"
                        },
                        new
                        {
                            Id = new Guid("585ac58c-35fe-4f19-9b0d-99fad357940a"),
                            Eliminado = false,
                            FechaCreacion = new DateTime(2024, 2, 13, 6, 26, 11, 625, DateTimeKind.Local).AddTicks(2173),
                            Nombre = "Jhon",
                            TipoCliente = "SEGUNDO"
                        });
                });

            modelBuilder.Entity("AutorizacionDePagos.Api.Domain.Estado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Estados", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d781bc0f-093d-4e2c-b30c-3fdd0117faa5"),
                            Nombre = "CONFIRMAR"
                        },
                        new
                        {
                            Id = new Guid("281e3474-a9fa-4a88-a0d2-654b0304b343"),
                            Nombre = "APROBADO"
                        },
                        new
                        {
                            Id = new Guid("1c65dd15-2466-4e44-8c7f-28ebbc94a7da"),
                            Nombre = "DENEGADO"
                        },
                        new
                        {
                            Id = new Guid("6c9c0a81-6c4f-43df-9527-ce2f7e63f6c4"),
                            Nombre = "NO_CONFIRMADO"
                        });
                });

            modelBuilder.Entity("AutorizacionDePagos.Api.Domain.TipoAutorizacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TiposAutorizacion", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("51574221-1158-4ef6-b5fa-4f69d14fadf4"),
                            Nombre = "COBRO"
                        },
                        new
                        {
                            Id = new Guid("c0cb46d6-c7ba-4299-b1ab-1789231df7f6"),
                            Nombre = "DEVOLUCION"
                        },
                        new
                        {
                            Id = new Guid("ee7e9e0f-7759-46ce-88a2-888d406b7251"),
                            Nombre = "REVERSA"
                        });
                });

            modelBuilder.Entity("AutorizacionDePagos.Api.Domain.Autorizacion", b =>
                {
                    b.HasOne("AutorizacionDePagos.Api.Domain.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoAutorizacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutorizacionDePagos.Api.Domain.TipoAutorizacion", "TipoAutorizacion")
                        .WithMany()
                        .HasForeignKey("TipoAutorizacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("TipoAutorizacion");
                });
#pragma warning restore 612, 618
        }
    }
}
